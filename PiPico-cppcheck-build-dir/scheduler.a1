<?xml version="1.0"?>
<analyzerinfo hash="2333368460017566087">
        <error id="varFuncNullUB" severity="portability" msg="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour." verbose="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour.\012The C99 standard, in section 7.15.1.1, states that if the type used by va_arg() is not compatible with the type of the actual next argument (as promoted according to the default argument promotions), the behavior is undefined.\012The value of the NULL macro is an implementation-defined null pointer constant (7.17), which can be any integer constant expression with the value 0, or such an expression casted to (void*) (6.3.2.3). This includes values like 0, 0L, or even 0LL.\012In practice on common architectures, this will cause real crashes if sizeof(int) != sizeof(void*), and NULL is defined to 0 or any other null pointer constant that promotes to int.\012To reproduce you might be able to use this little code example on 64bit platforms. If the output includes &quot;ERROR&quot;, the sentinel had only 4 out of 8 bytes initialized to zero and was not detected as the final argument to stop argument processing via va_arg(). Changing the 0 to (void*)0 or 0L will make the &quot;ERROR&quot; output go away.\012#include &lt;stdarg.h&gt;\012#include &lt;stdio.h&gt;\012\012void f(char *s, ...) {\012    va_list ap;\012    va_start(ap,s);\012    for (;;) {\012        char *p = va_arg(ap,char*);\012        printf(&quot;%018p, %s\n&quot;, p, (long)p &amp; 255 ? p : &quot;&quot;);\012        if(!p) break;\012    }\012    va_end(ap);\012}\012\012void g() {\012    char *s2 = &quot;x&quot;;\012    char *s3 = &quot;ERROR&quot;;\012\012    // changing 0 to 0L for the 7th argument (which is intended to act as sentinel) makes the error go away on x86_64\012    f(&quot;first&quot;, s2, s2, s2, s2, s2, 0, s3, (char*)0);\012}\012\012void h() {\012    int i;\012    volatile unsigned char a[1000];\012    for (i = 0; i&lt;sizeof(a); i++)\012        a[i] = -1;\012}\012\012int main() {\012    h();\012    g();\012    return 0;\012}" cwe="475" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="115" column="68"/>
        </error>
        <error id="unusedLabelConfiguration" severity="style" msg="Label &apos;tableEntryAllocError&apos; is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor." verbose="Label &apos;tableEntryAllocError&apos; is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor." cwe="398" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="197" column="1"/>
            <symbol>tableEntryAllocError</symbol>
        </error>
        <error id="constStatement" severity="warning" msg="Unused variable value &apos;removeFrom&apos;" verbose="Unused variable value &apos;removeFrom&apos;" cwe="398" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="380" column="10"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;__internal_stack__&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;__internal_stack__&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="112" column="48"/>
            <symbol>__internal_stack__</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;__internal_stack__+internalStackSize&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;__internal_stack__+internalStackSize&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="112" column="68"/>
            <symbol>__internal_stack__+internalStackSize</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;newTask.stack&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;newTask.stack&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="172" column="62"/>
            <symbol>newTask.stack</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;newTask.stack+stackSize&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;newTask.stack+stackSize&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="172" column="74"/>
            <symbol>newTask.stack+stackSize</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;(*nextTaskEntry)-&gt;taskEntry.stackPtr&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;(*nextTaskEntry)-&gt;taskEntry.stackPtr&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="182" column="57"/>
            <symbol>(*nextTaskEntry)-&gt;taskEntry.stackPtr</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;(*nextTaskEntry)-&gt;taskEntry.stackPtr&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;(*nextTaskEntry)-&gt;taskEntry.stackPtr&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c">
            <location file="C:\Users\Mathias\Documents\C\PiPico\src\scheduler\scheduler.c" line="188" column="46"/>
            <symbol>(*nextTaskEntry)-&gt;taskEntry.stackPtr</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.h:35:12" call-funcname="Scheduler_CreateTask" call-argnr="3" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="115" col="25" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.h:35:12" call-funcname="Scheduler_CreateTask" call-argnr="6" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="115" col="25" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:87:13" call-funcname="Scheduler_MoveTaskToOtherList" call-argnr="3" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="431" col="38" call-argexpr="&amp;deleteListPtr" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:87:13" call-funcname="Scheduler_MoveTaskToOtherList" call-argnr="1" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="360" col="5" my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:88:13" my-argnr="1"/>
<function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:87:13" call-funcname="Scheduler_MoveTaskToOtherList" call-argnr="1" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="367" col="5" my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:89:13" my-argnr="1"/>
<function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:403:1" call-funcname="Scheduler_TaskToListEntry" call-argnr="1" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="427" col="42" my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:85:13" my-argnr="1"/>
<function-call call-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:403:1" call-funcname="Scheduler_TaskToListEntry" call-argnr="1" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="444" col="34" my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:442:1" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.h:35:12" my-argnr="1" my-argname="name" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="150" col="27" value="0"/>
    <unsafe-usage my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:83:13" my-argnr="1" my-argname="task" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="320" col="26" value="0"/>
    <unsafe-usage my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c:411:1" my-argnr="1" my-argname="task" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="413" col="13" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.h:35:12" my-argnr="1" my-argname="name" file="C:/Users/Mathias/Documents/C/PiPico/src/scheduler/scheduler.c" line="150" col="27" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="Scheduler_Initialize" lineNumber="97"/>
    <functiondecl functionName="Scheduler_Start" lineNumber="123"/>
    <functiondecl functionName="Scheduler_CreateTask" lineNumber="136"/>
    <functiondecl functionName="Scheduler_Sleep" lineNumber="213"/>
    <functiondecl functionName="Scheduler_DeleteTask" lineNumber="229"/>
    <functiondecl functionName="Scheduler_GetCurrentTask" lineNumber="265"/>
    <functiondecl functionName="Scheduler_IdleTask" lineNumber="273"/>
    <functiondecl functionName="Scheduler_FindHighestPriorityTaskAvailable" lineNumber="284"/>
    <functiondecl functionName="Scheduler_StartFirstTask" lineNumber="311"/>
    <functiondecl functionName="Scheduler_ContextSwitch" lineNumber="328"/>
    <functiondecl functionName="Scheduler_UpdateTicks" lineNumber="344"/>
    <functiondecl functionName="Scheduler_MoveTaskToBlockedList" lineNumber="358"/>
    <functiondecl functionName="Scheduler_MoveTaskToReadyList" lineNumber="365"/>
    <functiondecl functionName="Scheduler_MoveTaskToOtherList" lineNumber="372"/>
    <functiondecl functionName="Scheduler_TaskToListEntry" lineNumber="403"/>
    <functiondecl functionName="Scheduler_FreeTask" lineNumber="411"/>
    <functiondecl functionName="Scheduler_RemoveTask" lineNumber="419"/>
    <functiondecl functionName="Scheduler_WakeTask" lineNumber="442"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="Scheduler_ContextSwitch"/>
    <functioncall functionName="Scheduler_CreateTask"/>
    <functioncall functionName="Scheduler_FindHighestPriorityTaskAvailable"/>
    <functioncall functionName="Scheduler_FreeTask"/>
    <functioncall functionName="Scheduler_IdleTask"/>
    <functioncall functionName="Scheduler_InitTick"/>
    <functioncall functionName="Scheduler_MoveTaskToBlockedList"/>
    <functioncall functionName="Scheduler_MoveTaskToOtherList"/>
    <functioncall functionName="Scheduler_MoveTaskToReadyList"/>
    <functioncall functionName="Scheduler_RemoveTask"/>
    <functioncall functionName="Scheduler_SaveStackPointer"/>
    <functioncall functionName="Scheduler_StartFirstTask"/>
    <functioncall functionName="Scheduler_SwitchTask"/>
    <functioncall functionName="Scheduler_TaskToListEntry"/>
    <functioncall functionName="extFree"/>
    <functioncall functionName="extMalloc"/>
    <functioncall functionName="false"/>
    <functioncall functionName="listEntryAllocError"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="offsetof"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="strncpy"/>
    <functioncall functionName="tableEntryAllocError"/>
    <functioncall functionName="taskAllocError"/>
    <functioncall functionName="taskEntry"/>
    <functioncall functionName="true"/>
    <functioncall functionName="va_arg"/>
    <functioncall functionName="va_end"/>
    <functioncall functionName="va_start"/>
  </FileInfo>
</analyzerinfo>
