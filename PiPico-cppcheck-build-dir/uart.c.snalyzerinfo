hard_assert call:[hard_assertion_failure] noreturn:[hard_assertion_failure]
to_us_since_boot
update_us_since_boot
from_us_since_boot call:[update_us_since_boot]
__breakpoint call:[asm] noreturn:[asm]
__compiler_memory_barrier call:[asm] noreturn:[asm]
rp2040_rom_version
tight_loop_contents
__mul_instruction call:[asm]
__get_current_exception call:[asm]
busy_wait_at_least_cycles call:[asm] noreturn:[asm]
get_core_num call:[return] noreturn:[return]
xip_alias_check_addr call:[assert] noreturn:[assert]
hw_set_bits
hw_clear_bits
hw_xor_bits
hw_write_masked call:[hw_xor_bits] noreturn:[hw_xor_bits]
uart_get_index call:[assert] noreturn:[assert]
uart_get_instance call:[assert,static_assert] noreturn:[assert]
uart_get_hw call:[return,uart_get_index]
uart_set_hw_flow call:[hw_write_masked,uart_get_hw] noreturn:[hw_write_masked]
uart_set_format call:[assert,hw_write_masked,uart_get_hw] noreturn:[assert,hw_write_masked]
uart_set_irq_enables call:[hw_write_masked,uart_get_hw] noreturn:[hw_write_masked]
uart_is_enabled call:[uart_get_hw]
uart_set_fifo_enabled call:[hw_write_masked,uart_get_hw] noreturn:[hw_write_masked]
uart_is_writable call:[uart_get_hw]
uart_tx_wait_blocking call:[tight_loop_contents,uart_get_hw] noreturn:[tight_loop_contents]
uart_is_readable call:[uart_get_hw]
uart_write_blocking call:[tight_loop_contents,uart_get_hw,uart_is_writable] noreturn:[tight_loop_contents]
uart_read_blocking call:[tight_loop_contents,uart_get_hw,uart_is_readable] noreturn:[tight_loop_contents]
uart_putc_raw call:[uart_write_blocking] noreturn:[uart_write_blocking]
uart_putc call:[uart_get_index,uart_putc_raw] noreturn:[uart_putc_raw]
uart_puts call:[uart_putc,uart_putc_raw] noreturn:[uart_putc,uart_putc_raw]
uart_getc call:[uart_read_blocking]
uart_set_break call:[hw_clear_bits,hw_set_bits,uart_get_hw] noreturn:[hw_clear_bits,hw_set_bits]
uart_default_tx_wait_blocking call:[__CONCAT,uart_tx_wait_blocking] noreturn:[uart_tx_wait_blocking]
uart_get_dreq call:[static_assert,uart_get_index]
reset_block call:[hw_set_bits] noreturn:[hw_set_bits]
unreset_block call:[hw_clear_bits] noreturn:[hw_clear_bits]
unreset_block_wait call:[hw_clear_bits,tight_loop_contents] noreturn:[tight_loop_contents]
frequency_count_mhz call:[frequency_count_khz,return]
clock_gpio_init call:[clock_gpio_init_int_frac] noreturn:[clock_gpio_init_int_frac]
check_hardware_alarm_num_param call:[assert] noreturn:[assert]
time_us_32 call:[return]
time_reached call:[return,to_us_since_boot] noreturn:[return]
uart_reset call:[assert,reset_block,uart_get_index] noreturn:[assert,reset_block]
uart_unreset call:[assert,uart_get_index,unreset_block_wait] noreturn:[assert,unreset_block_wait]
uart_init call:[assert,clock_get_hz,hw_set_bits,uart_get_hw,uart_reset,uart_set_baudrate,uart_set_format,uart_set_translate_crlf,uart_unreset] noreturn:[assert]
uart_deinit call:[assert,uart_reset] noreturn:[assert,uart_reset]
uart_set_baudrate call:[assert,clock_get_hz,hw_set_bits,return,uart_get_hw] noreturn:[assert]
uart_set_translate_crlf global:[uart_char_to_line_feed] call:[uart_get_index]
uart_is_readable_within_us call:[time_us_32,uart_is_readable,while]
