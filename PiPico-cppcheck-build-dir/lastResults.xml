<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.10"/>
    <errors>
        <error id="oppositeInnerCondition" severity="warning" msg="Opposite inner &amp;#039;if&amp;#039; condition leads to a dead code block." verbose="Opposite inner &amp;#039;if&amp;#039; condition leads to a dead code block (outer condition is &amp;#039;entry!=NULL&amp;#039; and inner condition is &amp;#039;!entry&amp;#039;)." cwe="398" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="255" info="opposite inner condition: !entry"/>
            <location file="src\scheduler\scheduler.c" line="253" info="outer condition: entry!=NULL"/>
        </error>
        <error id="unusedLabel" severity="style" msg="Label &amp;#039;tableEntryAllocError&amp;#039; is not used." verbose="Label &amp;#039;tableEntryAllocError&amp;#039; is not used." cwe="398" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="173"/>
        </error>
        <error id="constStatement" severity="warning" msg="Unused variable value &amp;#039;removeFrom&amp;#039;" verbose="Unused variable value &amp;#039;removeFrom&amp;#039;" cwe="398" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="344"/>
        </error>
        <error id="pointerSize" severity="warning" msg="Size of pointer &amp;#039;data&amp;#039; used instead of size of its data." verbose="Size of pointer &amp;#039;data&amp;#039; used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write &amp;#039;sizeof(*data)&amp;#039;." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="163"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;__internal_stack__&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;__internal_stack__&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="109"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;__internal_stack__+internalStackSize&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;__internal_stack__+internalStackSize&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="109"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;newTask.stack&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;newTask.stack&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="160"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;newTask.stack+stackSize&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;newTask.stack+stackSize&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="160"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;(*nextTaskEntry)-&amp;gt;taskEntry.stackPtr&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;(*nextTaskEntry)-&amp;gt;taskEntry.stackPtr&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="163"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;(*nextTaskEntry)-&amp;gt;taskEntry.stackPtr&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;(*nextTaskEntry)-&amp;gt;taskEntry.stackPtr&amp;#039; is of type &amp;#039;void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="src/scheduler/scheduler.c" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="164"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;Scheduler_UpdateTicks&amp;#039; is never used." verbose="The function &amp;#039;Scheduler_UpdateTicks&amp;#039; is never used." cwe="561" sinceDate="dd-MM-yyyy">
            <location file="src\scheduler\scheduler.c" line="310"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false" verbose="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false" cwe="570" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="98" info="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false"/>
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="97" info="delayed is assigned &amp;#039;base+us&amp;#039; here."/>
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="97" info="Assignment &amp;#039;delayed=base+us&amp;#039;, assigned value is greater than -1"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false" verbose="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false" cwe="570" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="117" info="Condition &amp;#039;(int64_t)delayed&amp;lt;0&amp;#039; is always false"/>
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="116" info="delayed is assigned &amp;#039;base+ms*1000ull&amp;#039; here."/>
            <location file="..\..\pico-sdk\src\common\pico_time\include\pico\time.h" line="116" info="Assignment &amp;#039;delayed=base+ms*1000ull&amp;#039;, assigned value is greater than -1"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;uart&amp;#039; can be declared as pointer to const" verbose="Parameter &amp;#039;uart&amp;#039; can be declared as pointer to const" cwe="398" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="..\..\pico-sdk\src\rp2_common\hardware_uart\include\hardware\uart.h" line="100"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: tmp" verbose="Unused variable: tmp" cwe="563" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="src\main.c" line="21"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;t1&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;t1&amp;#039; is assigned a value that is never used." cwe="563" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="src\main.c" line="107"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;t2&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;t2&amp;#039; is assigned a value that is never used." cwe="563" file0="src/main.c" sinceDate="dd-MM-yyyy">
            <location file="src\main.c" line="108"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;blink&amp;#039; is never used." verbose="The function &amp;#039;blink&amp;#039; is never used." cwe="561" sinceDate="dd-MM-yyyy">
            <location file="src\main.c" line="65"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;task3&amp;#039; is never used." verbose="The function &amp;#039;task3&amp;#039; is never used." cwe="561" sinceDate="dd-MM-yyyy">
            <location file="src\main.c" line="122"/>
        </error>
    </errors>
</results>
